name: Pull Request Automation

on:
  push:
    branches:
      - develop

jobs:
  auto-create:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Check Existing Pull Request
      id: pr_check
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prList = await github.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            head: 'develop',
            base: 'master',
          });

          core.setOutput('pr_exists', prList.data.length > 0);

    - name: Create Pull Request
      if: steps.pr_check.outputs.pr_exists != 'true'
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const title = 'Automated Merge from develop to master';
          const body = 'This is an automated pull request.';
          const head = 'develop';
          const base = 'master';

          const pr = await github.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title,
            body,
            head,
            base,
          });

          // Assign the pull request to the repository owner (self)
          await github.issues.addAssignees({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: pr.data.number,
            assignees: [context.repo.owner],
          });

          // Request the repository owner as a reviewer
          await github.pulls.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pr.data.number,
            review_requesters: [context.repo.owner],
          });

          core.setOutput('pull_request_number', pr.data.number);

    - name: Extract Commit Message and Add Labels
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          // Extract commit message and assign labels based on it
          const commitMessages = await github.pulls.listCommits({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pr.data.number,
          });

          const commitMessage = commitMessages.data[0].commit.message;
          let labelToAdd = '';

          // Define your label conditions based on commit message
          if (commitMessage.includes('adds') || commitMessage.includes('enhance') || commitMessage.includes('new') || commitMessage.includes('modify')) {
            labelToAdd = 'enhancement';
          } else if (commitMessage.includes('fix') || commitMessage.includes('bug') || commitMessage.includes('error')) {
            labelToAdd = 'bug';
          }

          // Add the label to the pull request
          if (labelToAdd) {
            await github.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.data.number,
              labels: [labelToAdd],
            });
          }

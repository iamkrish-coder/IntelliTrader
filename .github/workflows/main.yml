name: Auto Merge to Master

on:
  push:
    branches:
      - develop

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Get Open Pull Requests
      id: get_prs
      run: |
        pr_count=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/pulls?head=develop&base=master" | jq length)
        echo "::set-output name=pr_count::$pr_count"

    - name: Debug PR Count
      run: echo "PR Count: ${{ steps.get_prs.outputs.pr_count }}"


    - name: Create or Update Pull Request
      id: create_or_update_pr
      run: |
        if [ ${{ steps.get_prs.outputs.pr_count }} -eq 0 ]; then
          # Create a new pull request
          pr_number=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -X POST \
            -d '{"title":"Automated Merge from develop to master","body":"This is an automated pull request.","head":"develop","base":"master"}' \
            https://api.github.com/repos/${{ github.repository }}/pulls | jq -r '.number')
        else
          # Get the pull request number
          pr_number=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls?head=develop\&base=master | jq -r '.[0].number')

          # Update the existing pull request branch
          git push origin develop:refs/heads/master
        fi

        echo "::set-output name=pr_number::$pr_number"

    - name: Debug PR Number
      run: echo "PR Number: ${{ steps.create_or_update_pr.outputs.pr_number }}"

    - name: Auto Approve and Merge Pull Request
      if: steps.create_or_update_pr.outputs.pr_number != ''
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          console.log('PR Number:', context.payload.pull_request.number);

          await github.pulls.createReview({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: steps.create_or_update_pr.outputs.pr_number,
            event: 'APPROVE',
          });

          await github.pulls.merge({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: steps.create_or_update_pr.outputs.pr_number,
          });
